name: Containers

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

# Each container image is built in its own job. To add an image, simply copy and paste
# one of the jobs and configure the build to point to the container's Dockerfile and
# tags. If the build is main or for a tag then the images are pushed to dockerhub and
# gcr; images are not pushed on pull requests.
jobs:
  rvasp:
    name: rvasp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set Envrionment
        id: vars
        run: |
          echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
          echo "::set-output name=revision::$(git rev-parse --short HEAD)"

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            trisa/rvasp
            gcr.io/trisa-gds/rvasp
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # context and Dockerfile - should be configured for each image
          context: .
          file: ./containers/rvasp/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_REVISION=${{ steps.vars.outputs.revision }}
  openvasp:
    name: openvasp
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Envrionment
        id: vars
        run: |
          echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
          echo "::set-output name=revision::$(git rev-parse --short HEAD)"
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            trisa/openvasp
            gcr.io/trisa-gds/openvasp
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # context and Dockerfile - should be configured for each image
          context: .
          file: ./containers/openvasp/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
          
  GIT_REVISION=${{ steps.vars.outputs.revision }}
  migrate:
    name: migrate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set Envrionment
        id: vars
        run: |
          echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
          echo "::set-output name=revision::$(git rev-parse --short HEAD)"

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            trisa/rvasp-migrate
            gcr.io/trisa-gds/rvasp-migrate
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          # context and Dockerfile - should be configured for each image
          context: .
          file: ./containers/db/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_REVISION=${{ steps.vars.outputs.revision }}
